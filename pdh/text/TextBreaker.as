package pdh.text{		import flash.text.TextField;		public class TextBreaker 	{		private var strArray:Array;		private var lineNum:int;		private const MAX_PAGES = 50				public function TextBreaker():void 		{					}				public function get maxPages():int 		{			return strArray.length		}				// get page of text		public function getPage(val:int):String 		{			if (val > strArray.length) val = strArray.length;			val = val - 1			return strArray[val]		}		public function createPageArray(theText:String, myTextField:TextField ):Array		{			var textPage:String;			var endindex:int;						myTextField.htmlText = theText			lineNum = myTextField.bottomScrollV - 1						strArray = new Array();						var counter:int = 0			while (counter < MAX_PAGES){								myTextField.htmlText = theText;								// get end index for visible area				endindex = getEndIndex(myTextField);				if (endindex == -1){					trace("END FOUND")					strArray.push(theText)					break;				}				var offset = myTextField.getLineOffset(lineNum);				endindex = checkForBreak(theText, endindex + offset); // will check to see if endindex needs to be moved to preserve word						trace(endindex)								textPage = theText.slice(0, endindex); // get page for array								trace(textPage)				trace("")								theText = theText.slice(endindex, theText.length); // take rest and make new string									strArray.push(textPage);								counter ++;			}						return strArray;		}		// makes sure word does not get cut in half		private function checkForBreak(str:String, end:int):int 		{			var i:int = end;			while(i > end - 20){				if (str.charAt(i) == " ") break;				i--;			}			return i		}				// find last character in text field		private function getEndIndex(txt:TextField):int 		{			var i:int						try{				var txtLine:String = txt.getLineText(lineNum)				i = txtLine.length - 1;			} catch(e:Error){				i = -1			}						//trace("ending visible index = " + i + " |  text line = " + lineNum)						return i;		}					}		}