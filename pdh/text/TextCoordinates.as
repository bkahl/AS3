package pdh.text{	import flash.text.TextFieldAutoSize;	import flash.text.TextField;	import flash.text.TextLineMetrics;		public class TextCoordinates	{				public static function getMetrics(myTextField:TextField, _phrase:String):Array		{			var arr:Array = new Array()			var s:String = myTextField.text; 			var searchText:String = _phrase; 			var firstPos:int = s.indexOf(searchText)						if (firstPos == -1) return [];						// figure out if text wraps two lines			var lineIndex:int = myTextField.getLineIndexOfChar(firstPos) // find which line			var lineOfText:String = myTextField.getLineText(lineIndex) // get all text from line			var charIndexInLine:int = firstPos - myTextField.getLineOffset(lineIndex) + 1 // start of char in line			var amountWrapped:int = lineOfText.length - (searchText.length + charIndexInLine) // amount wrapped onto next line						//trace("CHARACTERS PER LINE: " + lineOfText.length + " | TARGET CHAR = " + charIndexInLine)						// if wraps two lines, we need to make two objects			var obj:Object;			var obj2:Object;			if (amountWrapped < 0){				//trace("wrapping")				obj = getWidthAndPos(myTextField, firstPos, lineOfText.length - charIndexInLine )				arr.push(obj)								obj2 = getWidthAndPos(myTextField, 	myTextField.getLineOffset(lineIndex+1), Math.abs(amountWrapped) )				arr.push(obj2)							} 			else {				obj = getWidthAndPos(myTextField, firstPos, searchText.length )				arr.push(obj)			}						return arr;//{x: obj.x, y: obj.y, width:obj.width, height:0, } //metrics1.height		}						private static function getWidthAndPos(myTextField:TextField, firstPos:int, _length:int):Object 		{			var objLength:int = 0; 			//var lastPos:int = firstPos+_length; 			for (var count=0; count<_length; count++) 			{ 				objLength +=myTextField.getCharBoundaries(firstPos+count).width; 			} 						var xPos:int = myTextField.getCharBoundaries(firstPos).x + myTextField.x; 			var yPos:int = myTextField.getCharBoundaries(firstPos).y +myTextField.y; 			var index:int = myTextField.getLineIndexOfChar(firstPos); 						return {x: xPos , y:yPos , width:objLength}		}					}		}