/**	requires FLVPlayback component*/package pdh.video{		import fl.video.FLVPlayback; 	import pdh.events.VideoPlayerEvent;	import pdh.ui.UIObject	import pdh.sprite.Box;	import flash.events.Event;	import fl.video.VideoEvent;		public class VideoPlayer extends UIObject	{		private var videoPlayer	:FLVPlayback;						function VideoPlayer(w, h)		{						var box = new Box(w, h,0x000000)			addChild(box);						trace("[VideoPlayer] creating player")			videoPlayer = new FLVPlayback()			videoPlayer.setSize(w, h)				videoPlayer.activeVideoPlayerIndex = 1;			videoPlayer.visibleVideoPlayerIndex = 1			addChild(videoPlayer);			videoPlayer.fullScreenTakeOver = false;			videoPlayer.addEventListener(VideoEvent.COMPLETE, videoDone,false,0,true);			videoPlayer.addEventListener(VideoEvent.PLAYHEAD_UPDATE, update, false, 0, true);		}				public function loadVideo(flv:String):void 		{			trace("[VideoPlayer] loading: '" + flv + "'");			videoPlayer.source =  flv;			videoPlayer.playWhenEnoughDownloaded()			}						public function playVideo():void 		{			trace("[VideoPlayer] play");			videoPlayer.play();		}				public function pauseVideo():void 		{			videoPlayer.pause();		}				public function scrubTo(percent:Number):void 		{			var val = 123;			videoPlayer.seek(val);		}						private function videoDone(e:VideoEvent):void 		{			trace("[VideoPlayer] loaded!")		}				private function update(e:VideoEvent):void 		{			dispatchEvent(new VideoPlayerEvent(VideoPlayerEvent.UPDATE, {state:e.state, time:e.playheadTime}));		}				public function setSize(w, h):void 		{					}				public function destroy():void 		{			videoPlayer.closeVideoPlayer(1);		}					}}