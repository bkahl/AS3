package pdh.util{	import gs.TweenLite;	import gs.easing.*;	import flash.net.URLRequest;		import flash.display.Loader;	import flash.events.Event;	import pdh.ui.UIObject;	import flash.display.MovieClip;	import flash.display.AVM1Movie		import com.gskinner.utils.SWFBridgeAS3;		public class ZoomifyViewer extends UIObject	{				public static const LOADED:String = "loaded";		var ldr:Loader;		var targetFile:String;		var sb1:SWFBridgeAS3;		var zoomConnected:Boolean = false;		private var _h:Number;		private var _w:Number;				function ZoomifyViewer(file:String)		{						var randomID = "default"//(Math.random() * 1000).toString();			sb1 = new SWFBridgeAS3(randomID,this);			sb1.addEventListener(Event.CONNECT,onConnect);						trace("[ZoomifyViewer] random id = " + randomID)						targetFile = file;			var zfile = "zoomify.swf";			//var zfile = "http://www.cortinaproductions.com/preview/ushmm/zoomify.swf?connectionID=" + randomID ;			//var zfile = "http://www.cortinaproductions.com/preview/ushmm/zoomify.swf?imagePath=" + targetFile ;						trace("[ZoomifyViewer] loading " + zfile)			ldr = new Loader();				var urlReq:URLRequest = new URLRequest(zfile);			ldr.load(urlReq);			addChild(ldr);			ldr.contentLoaderInfo.addEventListener(Event.COMPLETE, loaded) 		}				private function loaded(e:Event):void 		{			ldr.contentLoaderInfo.removeEventListener(Event.COMPLETE, loaded);						dispatchEvent(new Event(LOADED));			TweenLite.from(ldr, .2, {alpha:0})			}				public override function destroy():void		{			try{				ldr.close();			} catch(err){};		}				function onConnect(p_evt:Event) {			trace("connected to swf")			sb1.send("loadImage", targetFile);			//sb1.send("setSize", _w, _h);			//sb1.send("zoomIn", 550);			zoomConnected = true;		}				public function setSize(w, h):void 		{			this.w = w;			this.h = h;						_w = w;			_h = h;											}					}	}