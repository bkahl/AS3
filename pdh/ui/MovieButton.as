/**	Glow Button		Code by Paul Hannan*/package pdh.ui{	import flash.display.MovieClip;		import flash.events.MouseEvent;	import gs.TweenLite;	import gs.easing.*;	import pdh.ui.IButton;	import pdh.ui.UIObject;		public class MovieButton extends UIObject implements IButton {						// stage instances		public var hitArea_mc	:MovieClip;		public var down_mc		:MovieClip		public var over_mc		:MovieClip		public var select_mc	:MovieClip;			public var inactive_mc	:MovieClip;		private var _selected	:Boolean = false;		private var fadeTime	:Number = .2;		private var _isEnabled	:Boolean = true;		private var o_state		:String;				public function MovieButton() 		{						addListeners();			buttonMode = true;			mouseChildren = false;						if ( hitArea_mc != null  ){				this.hitArea = hitArea_mc;					//hitArea_mc.alpha = 0;			}						prepState(inactive_mc);			prepState(down_mc);			prepState(over_mc);			prepState(select_mc);							}				private function prepState(target:MovieClip):void 		{			if (target != null){				target.mouseEnabled = false;				target.mouseChildren = false;				target.visible = false;				target.alpha = 0;				target.gotoAndStop(1)			}		}				protected function addListeners():void 		{			this.addEventListener(MouseEvent.MOUSE_DOWN, handleMouseEvent,false,0,true)			this.addEventListener(MouseEvent.MOUSE_UP, handleMouseEvent,false,0,true)			this.addEventListener(MouseEvent.ROLL_OVER, handleMouseEvent,false,0,true)			this.addEventListener(MouseEvent.ROLL_OUT, handleMouseEvent,false,0,true)		}				public function get selected():Boolean		{			return _selected;		}				public function set selected(val:Boolean):void 		{			_selected = val;		}				public function select():void 		{			selected = true;			if (select_mc != null){				select_mc.visible = true;				TweenLite.to(select_mc, fadeTime, {alpha:1, overwrite:1});			}			if (over_mc != null){				TweenLite.killTweensOf(over_mc);				over_mc.gotoAndStop(1);				over_mc.visible = false;			}			if (down_mc != null){				TweenLite.killTweensOf(down_mc);				down_mc.visible = false;			}			if (inactive_mc != null) {				TweenLite.killTweensOf(inactive_mc);				inactive_mc.visible = false;			}		}				public function deselect():void 		{			selected = false;			if (select_mc != null) select_mc.visible = false;		}				public function set isEnabled(val:Boolean):void 		{			_isEnabled = val;						if (_isEnabled){				buttonMode = true;				mouseEnabled = true;			} else {				buttonMode = false;				mouseEnabled = false;			}				}				public function enable(r:Boolean = false):void 		{			// reset state			if (r){				setActive(true)			} else {				isEnabled = true			}		}				public function disable():void 		{			isEnabled = false;		}				public function setActive(val:Boolean):void 		{			isEnabled = val;						if (over_mc != null){				TweenLite.to(over_mc, fadeTime, {alpha:0, overwrite:1});				over_mc.gotoAndStop(1);			}			if (down_mc != null) TweenLite.to(down_mc, fadeTime, {alpha:0, overwrite:1});						if (inactive_mc != null){				if (val){					TweenLite.to(inactive_mc, fadeTime, {autoAlpha:0, overwrite:1});				} else {					TweenLite.to(inactive_mc, fadeTime, {autoAlpha:1, overwrite:1});				}			} 		}				public function get isEnabled():Boolean		{			return _isEnabled;		}				protected function handleMouseEvent(evt:MouseEvent):void 		{						if (!_isEnabled){				return;			}									switch (evt.type) {				case MouseEvent.MOUSE_DOWN:						if (down_mc != null){						if (over_mc != null){							over_mc.visible = false;							over_mc.gotoAndStop(1)						}						down_mc.visible = true;						down_mc.alpha = 1;					}					break ;					case MouseEvent.MOUSE_UP:						if (down_mc != null){						if (over_mc != null && o_state == "over"){							over_mc.visible = true;							over_mc.gotoAndPlay(1)						}						TweenLite.to(down_mc, fadeTime, {alpha:0, onComplete:hideDone, overwrite:1, onCompleteParams:[down_mc]});					}					break ;					case MouseEvent.ROLL_OVER:						o_state = "over";					if (over_mc != null){						over_mc.visible = true;						TweenLite.to(over_mc, fadeTime, {alpha:1, overwrite:1});						over_mc.gotoAndPlay(1)					}					break ;					case MouseEvent.ROLL_OUT:						o_state = "out"					if (down_mc != null){						down_mc.visible = false;					}					if (over_mc != null) {						TweenLite.to(over_mc, fadeTime, {alpha:0, overwrite:1, onComplete:hideDone, onCompleteParams:[over_mc]});											}					break ;					default:					break;			}									}				private function hideDone(targ:MovieClip):void 		{			targ.visible = false;			targ.gotoAndStop(1);		}							} // end class} // end package