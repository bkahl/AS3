package pdh.util{	import flash.system.System;	import flash.net.navigateToURL;	import flash.net.URLRequest;	import flash.utils.Timer;	import flash.events.TimerEvent;	import flash.text.TextFormat;	import flash.text.TextField;	import flash.text.TextFieldAutoSize;	import flash.display.Sprite;		public class MemoryMonitor extends Sprite	{				private var showWarning		:Boolean = true;		private var warningMemory	:uint = 1000*1000*70;		private var abortMemory		:uint = 1000*1000*200;		private var checkMemory		:Timer;		private var display_txt		:TextField;		private var high			:Number = 0;		private var low				:Number = 10000000000000000;		private var c_mem			:Number;				function MemoryMonitor()		{			var format1:TextFormat = new TextFormat();			format1.font="_sans";			format1.size=12;			format1.color = 0xffffff;						display_txt = new TextField();			display_txt.width = 200;			display_txt.height = 200;			display_txt.textColor = 0xffffff;			display_txt.setTextFormat(format1);			display_txt.autoSize = TextFieldAutoSize.LEFT			addChild(display_txt);									checkMemory = new Timer(1000);			checkMemory.addEventListener(TimerEvent.TIMER, checkMemoryUsage)			checkMemory.start();					}				function checkMemoryUsage(e:TimerEvent) {					   c_mem = System.totalMemory;		   		   if ( c_mem > warningMemory && showWarning) {			  // show an error to the user warning them that we're running out of memory and might quit			  // try to free up memory if possible			  showWarning = false; // so we don't show an error every second			  trace("******************************")			  trace("******************************")			  trace("memory warning!")			  trace("******************************")			  trace("******************************")			   display_txt.textColor = 0xff0000;			} else if ( c_mem > abortMemory) {			  // save current user data to an LSO for recovery later?			  abort();			} else if ( c_mem < warningMemory){				showWarning = true			    display_txt.textColor = 0xffffff;			}								   if (c_mem > high){			   			   high = c_mem;			 }		   if (c_mem < low) {			   low = c_mem;		   }					   display_txt.text = "C = " +(c_mem /  1000000) + " , L = " + (low / 1000000) + " , H = " + (high / 1000000) + " (megs)";		}		function abort() {		   // send the user to a page explaining what happpened:		  /// navigateToURL(new URLRequest("memoryError.html"));		}						}	}