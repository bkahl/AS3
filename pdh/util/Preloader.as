package pdh.util{	import flash.display.MovieClip;	import flash.display.LoaderInfo;	import flash.display.Loader;		import flash.system.LoaderContext;	import flash.system.ApplicationDomain;		import flash.net.URLRequest;			import flash.utils.Timer;		import flash.events.Event;	import flash.events.ProgressEvent	import flash.events.TimerEvent;		public class Preloader extends MovieClip	{		private var swfLoader	:Loader;		public var loadbar_mc	:MovieClip;		private var timer		:Timer;		private var paramObj	:Object;		protected var pcent		:Number				function Preloader()		{			timer = new Timer(10); 					timer.addEventListener(TimerEvent.TIMER, checkStage);			timer.start()				}				private function checkStage(e:TimerEvent):void 		{			if (stage.stageWidth > 0){				timer.stop();				init();				}		}				protected function init():void 		{			paramObj = LoaderInfo(root.loaderInfo).parameters;								loadFile(paramObj["swf"]);		}				private function loadFile(file:String):void 		{			swfLoader = new Loader();			var urlReq:URLRequest = new URLRequest(file);			var childDefinitions:LoaderContext = new LoaderContext();			childDefinitions.applicationDomain = new ApplicationDomain(ApplicationDomain.currentDomain);			swfLoader.load(urlReq, childDefinitions);		   			swfLoader.contentLoaderInfo.addEventListener(Event.COMPLETE, loaded, false, 0, true);  			swfLoader.contentLoaderInfo.addEventListener(ProgressEvent.PROGRESS, handleLoading, false, 0, true);  		}				protected function loaded(e:Event):void 		{			addChild(e.currentTarget.content);		}				protected function handleLoading(e:ProgressEvent):void 		{			pcent = e.bytesLoaded / e.bytesTotal;			loadbar_mc.progress_mc.width = loadbar_mc.track_mc.width * pcent;		}			}			}