package pdh.papervision{		import flash.utils.Dictionary;	import flash.events.Event;	import flash.display.MovieClip;		// required classes	import org.papervision3d.render.BasicRenderEngine;	import org.papervision3d.view.Viewport3D;	import org.papervision3d.scenes.Scene3D;	import org.papervision3d.cameras.Camera3D;		public class RenderManager	{		private var scene			:Scene3D;		private var cam				:Camera3D;		private var view			:Viewport3D;		private var rend			:BasicRenderEngine;				private var rendering		:Boolean = false;		private var dict			:Dictionary;				function RenderManager(_mc:Object, _scene:Scene3D, _cam:Camera3D, _view:Viewport3D)		{			dict = new Dictionary();			dict["source"] = _mc;			scene = _scene;			cam = _cam;			view = _view;						rend = new BasicRenderEngine();			_mc.addEventListener(Event.ENTER_FRAME, renderInterval,false,0,true)					}						public function render():void 		{			if (!rendering){				rendering = true;						}		}						private function renderInterval(e:Event):void 		{			if (rendering) {								rendering = false;							render3d();			}					}				// draw 3d graphics to screen		private function render3d():void 		{													rend.renderScene(scene, cam, view);			}						public function destroy():void 		{			dict["source"].removeEventListener(Event.ENTER_FRAME, renderInterval)						dict = null;			rend = null			scene = null			cam = null			view = null		}							}		}